name: "Python Tests"

on: 
  pull_request: 
    types: ['opened', 'synchronize','reopened', 'edited']
  release:
    types: published
  workflow_dispatch:

jobs:
 pytest_py3:
    name: "Automated Tests with Pytest"
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: resq_db
      POSTGRES_PASSWORD: Password123
      POSTGRES_USER: resq_db_user
      POSTGRES_URL: db
      POSTGRES_PORT: 5432
      ALLURE_USER: ${{secrets.ALLURE_USER}}
      ALLURE_PASSWORD: ${{secrets.ALLURE_PASSWORD}}
      ALLURE_API_SERVER: ${{secrets.ALLURE_API_SERVER}}
    services:
      postgres:
        image: postgres:12.4-alpine
        env:
          POSTGRES_DB: ${{env.POSTGRES_DB}}
          POSTGRES_PASSWORD: ${{env.POSTGRES_PASSWORD}}
          POSTGRES_USER: ${{env.POSTGRES_USER}}
          POSTGRES_URL: ${{env.POSTGRES_URL}}
          POSTGRES_PORT: ${{env.POSTGRES_PORT}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - name: Build app container
        run: docker build -t resq_app -f ./docker/app/Dockerfile .

      - name: Run tests in app container
        run: docker run --add-host=ci_host:172.17.0.1 --env-file test.env -v ./coverage_html_report:/app_code/coverage_html_report -v ./test_results:/app_code/test_results resq_app